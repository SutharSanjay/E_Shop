[{"/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/index.js":"1","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/Routes.js":"2","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/user/Signin.js":"3","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/user/Signup.js":"4","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/core/Home.js":"5","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/core/Menu.js":"6","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/core/Base.js":"7","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/backend.js":"8","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/auth/helper/index.js":"9","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/user/UserDashBoard.js":"10","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/user/AdminDashBoard.js":"11","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/auth/helper/PrivateRoute.js":"12","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/auth/helper/AdminRoute.js":"13","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/admin/AddCategory.js":"14","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/admin/AddProduct.js":"15","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/admin/helper/adminapicall.js":"16","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/admin/ManageProduct.js":"17","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/admin/UpdateProduct.js":"18","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/admin/helper/imagehelper.js":"19","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/admin/ManageCategory.js":"20","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/admin/UpdateCategory.js":"21","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/core/helper/carthelper.js":"22","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/core/Cart.js":"23","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/user/Profile.js":"24","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/user/helper/userapicall.js":"25"},{"size":180,"mtime":1615192316263,"results":"26","hashOfConfig":"27"},{"size":2265,"mtime":1615996254478,"results":"28","hashOfConfig":"27"},{"size":3770,"mtime":1616007261969,"results":"29","hashOfConfig":"27"},{"size":4299,"mtime":1613840677808,"results":"30","hashOfConfig":"27"},{"size":216,"mtime":1609934074243,"results":"31","hashOfConfig":"27"},{"size":3583,"mtime":1615971984927,"results":"32","hashOfConfig":"27"},{"size":4084,"mtime":1618497859644,"results":"33","hashOfConfig":"27"},{"size":62,"mtime":1614317751143,"results":"34","hashOfConfig":"27"},{"size":1444,"mtime":1616005819054,"results":"35","hashOfConfig":"27"},{"size":1757,"mtime":1615996405031,"results":"36","hashOfConfig":"27"},{"size":2588,"mtime":1614142975657,"results":"37","hashOfConfig":"27"},{"size":568,"mtime":1613797199963,"results":"38","hashOfConfig":"27"},{"size":598,"mtime":1613797215297,"results":"39","hashOfConfig":"27"},{"size":4301,"mtime":1614142981510,"results":"40","hashOfConfig":"27"},{"size":6671,"mtime":1614537320001,"results":"41","hashOfConfig":"27"},{"size":3220,"mtime":1615999348622,"results":"42","hashOfConfig":"27"},{"size":3718,"mtime":1614142969682,"results":"43","hashOfConfig":"27"},{"size":7233,"mtime":1616001467215,"results":"44","hashOfConfig":"27"},{"size":346,"mtime":1614141005842,"results":"45","hashOfConfig":"27"},{"size":3565,"mtime":1614145104681,"results":"46","hashOfConfig":"27"},{"size":4861,"mtime":1614146694378,"results":"47","hashOfConfig":"27"},{"size":1094,"mtime":1615869093395,"results":"48","hashOfConfig":"27"},{"size":4088,"mtime":1618497829286,"results":"49","hashOfConfig":"27"},{"size":5008,"mtime":1616008065104,"results":"50","hashOfConfig":"27"},{"size":747,"mtime":1616005387655,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1qhx265",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"54"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"54"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/index.js",[],["120","121"],"/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/Routes.js",["122"],"import React,{Profiler, useEffect} from \"react\";\nimport {Route,Switch,BrowserRouter} from \"react-router-dom\";\nimport Home from \"./core/Home\";\nimport Signup from \"./user/Signup\"\nimport PrivateRoute from \"./auth/helper/PrivateRoute\"\nimport AdminRoute from \"./auth/helper/AdminRoute\"\nimport UserDashBoard from \"./user/UserDashBoard\";\nimport AdminDashBoard from \"./user/AdminDashBoard\";\nimport AddCategory from \"./admin/AddCategory\";\nimport AddProduct from \"./admin/AddProduct\";\nimport ManageProduct from \"./admin/ManageProduct\"\nimport UpdateProduct from \"./admin/UpdateProduct\";\nimport ManageCategory from \"./admin/ManageCategory\";\nimport UpdateCategory from \"./admin/UpdateCategory\";\nimport Signin from \"./user/Signin\";\nimport \"aos/dist/aos.css\";\nimport AOS from \"aos\"\nimport Cart from \"./core/Cart\";\nimport Profile from \"./user/Profile\"\nconst Routes = ()=>{\n\n    useEffect(() => {\n        AOS.init({\n          duration : 1500\n        });\n      }, []);\n\n    return(\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/\" component={Home}></Route>\n                <Route exact path=\"/signup\" component={Signup}></Route>\n                <PrivateRoute exact path=\"/cart\" component={Cart}></PrivateRoute>\n                <PrivateRoute exact path=\"/profile\" component={Profile}></PrivateRoute>\n                <Route exact path=\"/signin\" component={Signin}></Route>\n                <PrivateRoute path=\"/user/dashboard\" component={UserDashBoard}></PrivateRoute>\n                <AdminRoute path=\"/admin/dashboard\" component={AdminDashBoard}></AdminRoute>\n                <AdminRoute path=\"/admin/create/category\" component={AddCategory}></AdminRoute>\n                <AdminRoute path=\"/admin/create/product\" component={AddProduct}></AdminRoute>\n                <AdminRoute path=\"/admin/products\" component={ManageProduct}></AdminRoute>\n                <AdminRoute exact path=\"/admin/product/update/:productId\" component={UpdateProduct}></AdminRoute>\n                <AdminRoute exact path=\"/admin/categorys\" component={ManageCategory}></AdminRoute>\n                <AdminRoute exact path=\"/admin/category/update/:categoryId\" component={UpdateCategory}></AdminRoute>\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\n\nexport default Routes;","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/user/Signin.js",["123","124"],"import React,{useState} from \"react\"\nimport {NavLink , Redirect, useHistory, withRouter} from \"react-router-dom\"\nimport Menu from \"../core/Menu\"\nimport Logo from \"../logo1.png\"\nimport Flag from \"../flag.png\"\nimport \"./Signin_style.css\"\nimport { authenticate, isAuthenticated, signin } from \"../auth/helper\"\nimport Base from \"../core/Base\"\n\nconst Signin = ()=>{\n\n    const [values, setvalues] = useState({\n        email: \"\",\n        password : \"\",\n        error : \"\",\n        loading: false,\n        didRedirect : false\n    })\n\n    const {email,password,error,loading,didRedirect} = values\n    const {user} = isAuthenticated()\n\n    const handlechange = name => event =>{\n        setvalues({...values,error:false,[name] : event.target.value})\n    } \n\n    const loadingMessage =()=>{\n        return(\n            loading && <div style={{display:\"\"}} className=\"success-main\">\n                <h5 style={{color:\"white\"}}>Loading!!</h5>\n            </div>\n        )\n    }\n\n    const errorMessage =()=>{\n        return(\n            <div style={{display: error ? \"\" : \"none\"}} className=\"error-main\">\n                <h5>{values.error}</h5>\n            </div>\n        )\n    }\n\n    const ProcessRedirect = ()=>{\n        if(didRedirect){\n            if(user && user.role===1){\n                return <Redirect to=\"/admin/dashboard\" />\n                \n            }\n            else{\n                return <Redirect to=\"/\" />\n            }\n        }\n        if(isAuthenticated()){\n            return <Redirect exact path=\"/\" />\n        }\n    }\n\n    const onSubmit = event => {\n        event.preventDefault();\n        setvalues({...values,error:false,loading:true})\n        signin({email,password})\n        .then(data=>{\n            if(data.error){\n                setvalues({...values,error:data.error,loading:false})\n            }\n            else{\n                 authenticate(data,()=>{\n                     setvalues({...values,didRedirect:true})\n                 })   \n            }\n        })\n        .catch(console.log(\"Signin having Problem!!\"))\n        \n    }\n\n    return(\n        <div>\n            <div className=\"header\">\n                <span>\n                    <img className=\"logo_image\" src={Logo} alt=\"logo\"/>\n                </span>\n                <div className=\"menu-div\">\n                    <Menu className=\"menu\"/>\n                </div>\n            </div>\n            <div className=\"main-content1\">\n                <h1 className=\"heading\" >Hello</h1>\n                <p>New to Shop? <NavLink exact to=\"/signup\" style={{ color :\"rgb(22, 167, 157)\"}}>Create an account</NavLink></p>\n                {loadingMessage()}\n                {errorMessage()}\n                {ProcessRedirect()}\n                <div className=\"div-form\">\n                    <form className=\"input-group1\">\n                        <div className=\"email\">\n                            <label>Email</label>\n                            <input value={email} onChange={handlechange(\"email\")} type=\"text\" name=\"\" />\n                        </div>\n                        <br />\n                        <div className=\"pass\">\n                            <label>Password</label>\n                            <input value={password} onChange={handlechange(\"password\")} type=\"password\"/>\n                        </div>\n                        <br />\n                        <button onClick={onSubmit} className=\"create-btn\" type=\"button\">Signin</button>\n                    </form>\n                </div>\n            </div>\n            <div className=\"sign-footer\">\n                <p>Copyright © 2020-2021 Shop Inc. All Rights Reserved</p>\n                <img className=\"flag\" alt=\"flag\" src={Flag} />\n            </div>\n        </div>\n       \n    )\n}\n\n\nexport default withRouter(Signin)","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/user/Signup.js",[],"/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/core/Home.js",["125"],"import React from \"react\"\nimport API from \"../backend\"\nimport Base from \"./Base\"\n\nconst Home = ()=>{\n\n\n    return(\n\n        <Base>\n            <h1>My Content</h1>\n        </Base>\n       \n    )\n}\n\n\nexport default Home","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/core/Menu.js",[],"/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/core/Base.js",["126","127","128"],"import React,{useState,useEffect} from \"react\";\nimport {Link,Redirect} from \"react-router-dom\"\nimport Logo from \"../logo1.png\"\nimport Flag from \"../flag.png\"\nimport Menu from \"./Menu\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {faSearch} from '@fortawesome/free-solid-svg-icons'\nimport \"./Base_style.css\"\nimport Signin from \"../user/Signin\";\nimport { getallproduct } from \"../admin/helper/adminapicall\";\nimport ImageHelper from \"../admin/helper/imagehelper\";\nimport {addItemToCartHelper} from \"./helper/carthelper\"\n\n\nconst Base = (\n    {\n        className = \"sanjay\",\n        addTocart = true,\n        removeFromCart=false,\n        children\n    }\n)=>{\n\n    const [products, setproducts] = useState([])\n    const [redirect, setredirect] = useState(false)\n    const [count, setcount] = useState(0)\n\n    const doRedirect =(redirect)=>{\n        if(redirect){\n            return <Redirect to=\"/cart\" />\n        }\n    }\n\n    const addtocart = (product) =>{\n        addItemToCartHelper(product,()=> setredirect(true))\n    }\n\n\n    const additemTocart = (addTocart,product) =>{\n        return(\n            addTocart && (\n                <span onClick={()=>{addtocart(product,count)}} className=\"addtocart-btn\"><Link style={{textDecoration:\"none\",color:\"white\"}}>Add To Cart</Link></span>\n            )\n        )\n    }\n    const removeitemFromcart = removeFromCart =>{\n        return(\n            removeFromCart && (\n                <span className=\"removefromcart-btn\"><Link style={{textDecoration:\"none\",color:\"white\"}}>Remove Item</Link></span>\n            )\n        )\n    }\n\n    const preload =()=>{\n        getallproduct()\n        .then(data=>{\n            if (data.error) {\n                console.log(data.error)\n            }\n            else{\n                setproducts(data)\n            }\n        })\n    }\n\n    useEffect(() => {\n        preload()\n    }, [])\n\n\n    return(\n        <div className=\"main-body\">\n            <div className=\"header\">\n                <span>\n                    <img className=\"logo_image\" src={Logo} alt=\"logo\"/>\n                </span>\n                <span className=\"search\">\n                    <input className=\"search-bar\" type=\"text\" placeholder=\"Search Product\" /> \n                    <FontAwesomeIcon className=\"search-icon\" icon={faSearch} />   \n                </span>\n                <Menu />\n            </div>\n            <div className=\"product-home-main\">\n                <div  className=\"product-home-main-1\">\n                        {products.map((product,index)=>{\n                            return(\n                            <div data-aos=\"zoom-in\" className=\"card\">\n                            <ImageHelper product={product}/>\n                            <span className=\"card-name\">{product.name}</span>\n                            <span className=\"card-price\">Rs.{product.price}</span>\n                            {additemTocart(addTocart,product)}\n                            {removeitemFromcart(removeFromCart)}\n                            </div>\n                            )\n                        \n                        })}\n                        \n                    </div>\n            </div>\n            {doRedirect(redirect)}\n            <footer class=\"footer-distributed\">\n \n\t\t<div class=\"footer-left\">\n \n\t\t        <h3>E<span>Shop</span></h3>\n \n\t\t        <p class=\"footer-company-name\">Design By Sanjay Suthar</p>\n\t\t</div>\n \n\t\t<div class=\"footer-center\">\n \n                        <div>\n                                <p><span>Parul University</span> Vadodara, India</p>\n                        </div>\n \n                        <div>\n                                <p><a href=\"mailto:support@company.com\">sanjaysuthar786786@gmail.com</a></p>\n                        </div>\n\n\t\t</div>\n \n\t\t<div class=\"footer-right\">\n \n\t\t<p class=\"footer-company-about\">\n\t\t<span>About this Platform</span>\n                This is E-Commerce Website with admin control and payment method.\n\t\t</p>\n \n\t\t<div class=\"footer-icons\">\n \n\t\t</div>\n \n\t\t</div>\n \n\t\t</footer>\n        </div>\n    )\n}\n\n\nexport default Base\n","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/backend.js",[],"/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/auth/helper/index.js",[],"/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/user/UserDashBoard.js",["129","130","131"],"import React from \"react\"\nimport {NavLink} from \"react-router-dom\"\nimport \"./AdminDashboard.css\"\nimport logo from \"../logo1.png\"\nimport {isAuthenticated} from \"../auth/helper/index\"\nimport Menu from \"../core/Menu\"\nimport admin from \"../admin2.png\"\n\n\nconst UserDashBoard = () => {\n\n    const{user : {_id,firstname,lastname,email,role}} = isAuthenticated()\n\n    const leftSide = () => {\n        return(\n            <div className=\"leftSide\">\n                <img src={logo}></img>\n                 <ul>\n                    <NavLink className=\"admin\" exact to=\"/user/dashboard\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><img src={admin} /><p>{firstname}{lastname}</p></NavLink>\n                    <NavLink exact to=\"/profile\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Profile</li></NavLink>\n                </ul>\n            </div>\n        )\n    }\n\nconst rightSide = () => {\n        return(\n            <div className=\"rightSide\">\n                <div>\n                    <h2>Welcome {firstname}!</h2>\n                </div>\n                <div className=\"main_right\">\n                    <ul>\n                        <li className=\"info\"><h3>User Information</h3></li>\n                        <li><span>ID</span>: {_id}</li>\n                        <li><span>Name</span>: {firstname} {lastname}</li>\n                        <li><span>Email</span>: {email}</li>\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n\n\n    return(\n        <div className=\"admin_main\">\n            <Menu />\n            {leftSide()}\n            {rightSide()}\n        </div>\n    )\n}\n\nexport default UserDashBoard","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/user/AdminDashBoard.js",["132","133","134"],"import React from \"react\"\nimport {NavLink} from \"react-router-dom\"\nimport \"./AdminDashboard.css\"\nimport logo from \"../logo1.png\"\nimport {isAuthenticated} from \"../auth/helper/index\"\nimport Menu from \"../core/Menu\"\nimport admin from \"../admin2.png\"\n\n\nconst AdminDashBoard = () => {\n\n    const{user : {_id,firstname,lastname,email,role}} = isAuthenticated()\n\n    const leftSide = () => {\n        return(\n            <div className=\"leftSide\">\n                <img src={logo}></img>\n                 <ul>\n                 <NavLink className=\"admin\" exact to=\"/admin/dashboard\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><img src={admin} /><p>{firstname}{lastname}</p></NavLink>\n                        <NavLink exact to=\"/admin/create/category\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Create Category</li></NavLink>\n                        <NavLink exact to=\"/admin/create/product\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Create Product</li></NavLink>\n                        <NavLink exact to=\"/admin/products\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Manage Product</li></NavLink>\n                        <NavLink exact to=\"/admin/categorys\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Manage Category</li></NavLink>\n                        <NavLink exact to=\"/\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}}  style={{ textDecoration: 'none' ,color :\"white\"}}><li>Manage Orders</li></NavLink>\n                </ul>\n            </div>\n        )\n    }\n\nconst rightSide = () => {\n        return(\n            <div className=\"rightSide\">\n                <div>\n                    <h2>Welcome To Admin Area!</h2>\n                </div>\n                <div className=\"main_right\">\n                    <ul>\n                        <li className=\"info\"><h3>Admin Information</h3></li>\n                        <li><span>ID</span>: {_id}</li>\n                        <li><span>Name</span>: {firstname} {lastname}</li>\n                        <li><span>Email</span>: {email}</li>\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n\n\n    return(\n        <div className=\"admin_main\">\n            <Menu />\n            {leftSide()}\n            {rightSide()}\n        </div>\n    )\n}\n\nexport default AdminDashBoard","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/auth/helper/PrivateRoute.js",[],"/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/auth/helper/AdminRoute.js",[],"/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/admin/AddCategory.js",["135","136"],"import React,{useState} from \"react\"\nimport {NavLink} from \"react-router-dom\"\nimport logo from \"../logo1.png\"\nimport {isAuthenticated} from \"../auth/helper/index\"\nimport Menu from \"../core/Menu\"\nimport admin from \"../admin2.png\"\nimport {createCategory} from \"../admin/helper/adminapicall\"\n\n\nconst AddCategory = () => {\n\n    const [values,setValues] = useState({\n        name:\"\",\n        error:false,\n        success:false\n    })\n\n    const {name,error,success} = values\n\n    const{user : {_id,firstname,lastname},token} = isAuthenticated()\n\n    const handlechange = name => event => {\n        setValues({...values,error : false,[name]:event.target.value})\n    } \n\n\n    const successMessage =()=>{\n        return(\n            <div style={{display: success ? \"\" : \"none\"}} className=\"success-category\">\n                <h5>Category Created Successfully</h5>\n            </div>\n        )\n    }\n\n    const errorMessage =()=>{\n        return(\n            <div style={{display: error ? \"\" : \"none\"}} className=\"error-category\">\n                <h5>{values.error}</h5>\n            </div>\n        )\n    }\n\n    const onSubmit = event =>  {\n        event.preventDefault();\n        setValues({...values,error:false,success:false})\n        createCategory(_id,token,{name})\n        .then(data=>{\n            if(data.err){\n                setValues({...values,error:data.err,success:false})\n            }\n            else{\n                setValues({\n                    ...values,\n                    success:true,\n                    name:\"\"\n                })\n\n            }\n        })\n    }\n\n    const leftSide = () => {\n        return(\n            <div className=\"leftSide\">\n                <img src={logo}></img>\n                 <ul>\n                 <NavLink className=\"admin\" exact to=\"/admin/dashboard\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><img src={admin} /><p>{firstname}{lastname}</p></NavLink>\n                        <NavLink exact to=\"/admin/create/category\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Create Category</li></NavLink>\n                        <NavLink exact to=\"/admin/create/product\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Create Product</li></NavLink>\n                        <NavLink exact to=\"/admin/products\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Manage Product</li></NavLink>\n                        <NavLink exact to=\"/admin/categorys\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Manage Category</li></NavLink>\n                        <NavLink exact to=\"/\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}}  style={{ textDecoration: 'none' ,color :\"white\"}}><li>Manage Orders</li></NavLink>\n                </ul>\n            </div>\n        )\n    }\n\nconst rightSide = () => {\n        return(\n            <div className=\"rightSide\">\n                <div>\n                    <h2>Create Category</h2>\n                </div>\n                    {successMessage()}\n                    {errorMessage()}\n                <div className=\"main_right\">\n                    <div className=\"center-category\">\n                        <form className=\"input-category\">\n                            <div className=\"category\">\n                                <label>Enter Category Name</label>\n                                <br />\n                                <input value={name} onChange={handlechange(\"name\")} autoFocus required placeholder=\"eg.Summer\" type=\"text\" name=\"\" />\n                            </div>\n                            <br />\n                            <div>\n                                <button onClick={onSubmit} className=\"create-btn-category\" type=\"button\">Create</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n\n    return(\n        <div className=\"admin_main\">\n            <Menu />\n            {leftSide()}\n            {rightSide()}\n        </div>\n    )\n}\n\nexport default AddCategory","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/admin/AddProduct.js",["137","138","139","140","141","142","143"],"import React,{useState,useEffect} from \"react\"\nimport {NavLink} from \"react-router-dom\"\nimport logo from \"../logo1.png\"\nimport {isAuthenticated} from \"../auth/helper/index\"\nimport Menu from \"../core/Menu\"\nimport admin from \"../admin2.png\"\nimport { createProduct, getallcategories } from \"./helper/adminapicall\"\n\n\nconst AddProduct = () => {\n\n    const{user : {firstname,lastname,_id},token} = isAuthenticated()\n\n    const [values, setvalues] = useState({\n        name:\"\",\n        description:\"\",\n        price:\"\",\n        photo:\"\",\n        categories:[],\n        category:\"\",\n        stock:\"\",\n        loading:false,\n        error:\"\",\n        didredirect:false,\n        formdata:\"\",\n        createdProduct:\"\",\n\n    })\n\n    const {name,description,price,photo,category,categories,stock,loading,error,didredirect,createdProduct,formdata} = values\n\n\n    const onSubmit = (event)=>{\n        event.preventDefault()\n        setvalues({...values,error:\"\",loading:true})\n        createProduct(_id,token,formdata)\n        .then(data=>{\n            if (data.error) {\n                setvalues({...values,error:data.error,loading:false})\n            }\n            else{\n                setvalues({\n                    ...values,\n                    name:\"\",\n                    description:\"\",\n                    price:\"\",\n                    stock:\"\",\n                    category:\"\",\n                    error:\"\",\n                    createdProduct:data.name,\n                    formdata:\"\",\n                    loading:false,\n                    didredirect:true,\n                    \n                })\n            }\n        })\n        .catch(err=>console.log(err))\n    }\n\n    const handlechange = name =>event =>{\n        const value = name ===\"photo\"? event.target.files[0] : event.target.value\n        formdata.set(name,value)\n        setvalues({...values,[name]:value})\n           }\n\n    const preload = ()=>{\n        getallcategories()\n        .then(data=>{\n            if (data.error) {\n                setvalues({...values,error:data.error,})\n            }\n            else{\n                setvalues({...values,categories:data,formdata:new FormData()})\n                console.log(categories)\n            }\n        })\n        \n    }\n\n    useEffect(() => {\n        preload()\n    }, [])\n\n    const successMessage =()=>{\n        return(\n            <div style={{display: createdProduct ? \"\" : \"none\"}} className=\"success-product\">\n                <h5>{createdProduct} Created Successfully</h5>\n            </div>\n        )\n    }\n\n    const errorMessage =()=>{\n        return(\n            <div style={{display: error ? \"\" : \"none\"}} className=\"error-product\">\n                <h5>{error}</h5>\n            </div>\n        )\n    }\n\n    const leftSide = () => {\n        return(\n            <div className=\"leftSide\">\n                <img src={logo}></img>\n                 <ul>\n                        <NavLink className=\"admin\" exact to=\"/admin/dashboard\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><img src={admin} /><p>{firstname}{lastname}</p></NavLink>\n                        <NavLink exact to=\"/admin/create/category\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Create Category</li></NavLink>\n                        <NavLink exact to=\"/admin/create/product\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Create Product</li></NavLink>\n                        <NavLink exact to=\"/admin/products\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Manage Product</li></NavLink>\n                        <NavLink exact to=\"/admin/categorys\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Manage Category</li></NavLink>\n                        <NavLink exact to=\"/\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}}  style={{ textDecoration: 'none' ,color :\"white\"}}><li>Manage Orders</li></NavLink>\n                </ul>\n            </div>\n        )\n    }\n\nconst rightSide = () => {\n        return(\n            <div className=\"rightSide\">\n                <div>\n                    <h2>Create Product</h2>\n                </div>\n                {successMessage()}\n                {errorMessage()}\n                <div className=\"main_right\">\n                    <form className=\"input-product\">\n                                <label>Product Name</label>\n                                <input value={name} onChange={handlechange(\"name\")}  required type=\"text\" name=\"\" />\n                                <br />\n                                <label>Photo</label>\n                               \n                                <input  onChange={handlechange(\"photo\")} required type=\"file\" name=\"\" />\n                                <br />\n                                <label>Description</label>\n                                \n                                <textarea value={description} onChange={handlechange(\"description\")}  required name=\"\" />\n                                <br />\n                                <label>Price</label>\n                                \n                                <input value={price} onChange={handlechange(\"price\")} required type=\"number\" name=\"\" />\n                                <br />\n                                <label>Category</label>\n                                \n                                <select onChange={handlechange(\"category\")}>\n                                    <option>Select</option>\n                                    {categories && categories.map((cate,index)=>{\n                                        return <option key={index}  value={cate._id}>{cate.name}</option>\n                                    })}\n                                    \n                                </select>\n                                <br />\n                                <label>Stock</label>\n                                \n                                <input value={stock} onChange={handlechange(\"stock\")} required type=\"number\" name=\"\" />\n                                <br />\n                                <button onClick={onSubmit} className=\"create-btn-product\" type=\"button\">Create</button>\n\n                            </form>\n                </div>\n            </div>\n        )\n    }\n\n\n    return(\n        <div className=\"admin_main\">\n            <Menu />\n            {leftSide()}\n            {rightSide()}\n        </div>\n    )\n}\n\nexport default AddProduct","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/admin/helper/adminapicall.js",[],"/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/admin/ManageProduct.js",["144","145","146","147","148"],"import React,{useState,useEffect} from \"react\"\nimport {Link, NavLink} from \"react-router-dom\"\nimport logo from \"../logo1.png\"\nimport {isAuthenticated} from \"../auth/helper/index\"\nimport Menu from \"../core/Menu\"\nimport admin from \"../admin2.png\"\nimport {createCategory, deleteProduct, getallproduct} from \"../admin/helper/adminapicall\"\nimport photo from \"../photo.jpg\"\nimport UpdateProduct from \"./UpdateProduct\"\nimport ImageHelper from \"./helper/imagehelper\"\n\nconst ManageProduct = () => {\n\n    const [products, setproducts] = useState([])\n\n    const{user : {_id,firstname,lastname},token} = isAuthenticated()\n\n    const preload =()=>{\n        getallproduct()\n        .then(data=>{\n            if (data.error) {\n                console.log(data.error)\n            }\n            else{\n                setproducts(data)\n            }\n        })\n    }\n\n    useEffect(() => {\n        preload()\n    }, [])\n\n    const deleteThis = productId =>{\n        deleteProduct(productId,_id,token).then(data=>{\n            if (data.error) {\n                console.log(data.error)\n            }\n            else{\n                preload()\n            }\n        })\n\n    }\n \n    const leftSide = () => {\n        return(\n            <div className=\"leftSide\">\n                <img src={logo}></img>\n                 <ul>\n                 <NavLink className=\"admin\" exact to=\"/admin/dashboard\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><img src={admin} /><p>{firstname}{lastname}</p></NavLink>\n                        <NavLink exact to=\"/admin/create/category\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Create Category</li></NavLink>\n                        <NavLink exact to=\"/admin/create/product\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Create Product</li></NavLink>\n                        <NavLink exact to=\"/admin/products\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Manage Product</li></NavLink>\n                        <NavLink exact to=\"/admin/categorys\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Manage Category</li></NavLink>\n                        <NavLink exact to=\"/\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}}  style={{ textDecoration: 'none' ,color :\"white\"}}><li>Manage Orders</li></NavLink>\n                </ul>\n            </div>\n        )\n    }\n\nconst rightSide = () => {\n        return(\n            <div className=\"rightSide\">\n                <div>\n                    <h2>Manage Products</h2>\n                </div>\n                <div className=\"main\">\n                    {products.map((product,index)=>{\n                        return(\n                        <div className=\"card\">\n                        <ImageHelper product={product}/>\n                        <span className=\"card-name\">{product.name}</span>\n                        <span className=\"update-btn\"><Link style={{textDecoration:\"none\",color:\"white\"}} to={`/admin/product/update/${product._id}`}>Update</Link></span>\n                        <span className=\"delete-btn\" onClick={()=>{deleteThis(product._id)}} >Delete</span>\n                        </div>\n                        )\n                    \n                    })}\n                    \n                </div>\n            </div>\n        )\n    }\n\n\n    return(\n        <div className=\"admin_main\">\n            <Menu />\n            {leftSide()}\n            {rightSide()}\n        </div>\n    )\n}\n\nexport default ManageProduct","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/admin/UpdateProduct.js",["149","150","151","152","153","154","155"],"import React,{useState,useEffect} from \"react\"\nimport {NavLink} from \"react-router-dom\"\nimport logo from \"../logo1.png\"\nimport {isAuthenticated} from \"../auth/helper/index\"\nimport Menu from \"../core/Menu\"\nimport admin from \"../admin2.png\"\nimport { updateProduct, getallcategories, getProduct } from \"./helper/adminapicall\"\n\n\nconst UpdateProduct = ({match}) => {\n\n    const{user : {firstname,lastname,_id},token} = isAuthenticated()\n\n    const [values, setvalues] = useState({\n        name:\"\",\n        description:\"\",\n        price:\"\",\n        photo:\"\",\n        categories:[],\n        category:\"\",\n        stock:\"\",\n        loading:false,\n        error:\"\",\n        didredirect:false,\n        formdata:\"\",\n        createdProduct:\"\",\n\n    })\n\n    const {name,description,price,photo,category,categories,stock,loading,error,didredirect,createdProduct,formdata} = values\n\n\n    const onSubmit = (event)=>{\n        event.preventDefault()\n        setvalues({...values,error:\"\",loading:true})\n        updateProduct(match.params.productId,_id,token,formdata)\n        .then(data=>{\n            if (data.error) {\n                setvalues({...values,error:data.error,loading:false})\n            }\n            else{\n                setvalues({\n                    ...values,\n                    name:\"\",\n                    description:\"\",\n                    price:\"\",\n                    stock:\"\",\n                    category:\"\",\n                    error:\"\",\n                    createdProduct:data.name,\n                    formdata:\"\",\n                    loading:false,\n                    didredirect:true,\n                    \n                })\n            }\n        })\n        .catch(err=>console.log(err))\n    }\n\n    const handlechange = name =>event =>{\n        const value = name ===\"photo\"? event.target.files[0] : event.target.value\n        formdata.set(name,value)\n        setvalues({...values,[name]:value})\n           }\n\n    const preload = (productId)=>{\n        getProduct(productId)\n        .then(data=>{\n            if (data.error) {\n                setvalues({...values,error:data.error,})\n            }\n            else{\n                setvalues({\n                    ...values,\n                    name:data.name,\n                    description:data.description,\n                    price:data.price,\n                    stock:data.stock,\n                    formdata:new FormData(),\n                })\n                preloadcategory()\n            }\n        })\n        \n    }\n\n    const preloadcategory =()=>{\n        getallcategories().then(data=>{\n            if (data.error) {   \n                setvalues({...values,error:data.error})\n            }\n            else{\n                setvalues({categories:data,formdata:new FormData()})\n            }\n        })\n    }\n\n    useEffect(() => {\n        preload(match.params.productId)\n    }, [])\n\n    const successMessage =()=>{\n        return(\n            <div style={{display: createdProduct ? \"\" : \"none\"}} className=\"success-product\">\n                <h5>{createdProduct} Updated Successfully</h5>\n            </div>\n        )\n    }\n\n    const errorMessage =()=>{\n        return(\n            <div style={{display: error ? \"\" : \"none\"}} className=\"error-product\">\n                <h5>{error}</h5>\n            </div>\n        )\n    }\n\n    const leftSide = () => {\n        return(\n            <div className=\"leftSide\">\n                <img src={logo}></img>\n                 <ul>\n                        <NavLink className=\"admin\" exact to=\"/admin/dashboard\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><img src={admin} /><p>{firstname}{lastname}</p></NavLink>\n                        <NavLink exact to=\"/admin/create/category\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Create Category</li></NavLink>\n                        <NavLink exact to=\"/admin/create/product\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Create Product</li></NavLink>\n                        <NavLink exact to=\"/admin/products\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Manage Product</li></NavLink>\n                        <NavLink exact to=\"/\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Manage Category</li></NavLink>\n                        <NavLink exact to=\"/\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}}  style={{ textDecoration: 'none' ,color :\"white\"}}><li>Manage Orders</li></NavLink>\n                </ul>\n            </div>\n        )\n    }\n\nconst rightSide = () => {\n        return(\n            <div className=\"rightSide\">\n                <div>\n                    <h2>Update Product</h2>\n                </div>\n                {successMessage()}\n                {errorMessage()}\n                <div className=\"main_right\">\n                    <form className=\"input-product\">\n                                <label>Product Name</label>\n                                <input value={name} onChange={handlechange(\"name\")}  required type=\"text\" name=\"\" />\n                                <br />\n                                <label>Photo</label>\n                               \n                                <input  onChange={handlechange(\"photo\")} required type=\"file\" name=\"\" />\n                                <br />\n                                <label>Description</label>\n                                \n                                <textarea value={description} onChange={handlechange(\"description\")}  required name=\"\" />\n                                <br />\n                                <label>Price</label>\n                                \n                                <input value={price} onChange={handlechange(\"price\")} required type=\"number\" name=\"\" />\n                                <br />\n                                <label>Category</label>\n                                \n                                <select onChange={handlechange(\"category\")}>\n                                    <option>Select</option>\n                                    {categories && categories.map((cate,index)=>{\n                                        return <option key={index}  value={cate._id}>{cate.name}</option>\n                                    })}\n                                    \n                                </select>\n                                <br />\n                                <label>Stock</label>\n                                \n                                <input value={stock} onChange={handlechange(\"stock\")} required type=\"number\" name=\"\" />\n                                <br />\n                                <button onClick={onSubmit} className=\"create-btn-product\" type=\"button\">Update</button>\n\n                            </form>\n                </div>\n            </div>\n        )\n    }\n\n\n    return(\n        <div className=\"admin_main\">\n            <Menu />\n            {leftSide()}\n            {rightSide()}\n        </div>\n    )\n}\n\nexport default UpdateProduct","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/admin/helper/imagehelper.js",["156"],"import React from \"react\"\nimport API from \"../../backend\"\nimport photo from \"../../photo.jpg\"\n\nconst ImageHelper =({product})=>{\n\n    const imageurl = product ? `${API}/product/photo/${product._id}` : photo\n    \n    return(\n        <span className=\"card-img\">\n            <img src={imageurl} />\n        </span>\n    )\n}\n\nexport default ImageHelper","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/admin/ManageCategory.js",["157","158","159"],"import React,{useState,useEffect} from \"react\"\nimport {Link, NavLink} from \"react-router-dom\"\nimport logo from \"../logo1.png\"\nimport {isAuthenticated} from \"../auth/helper/index\"\nimport Menu from \"../core/Menu\"\nimport admin from \"../admin2.png\"\nimport {deleteCategory, getallcategories} from \"../admin/helper/adminapicall\"\nimport photo from \"../photo.jpg\"\n\nconst ManageCategory = () => {\n\n    const [category, setcategoty] = useState([])\n\n    const{user : {_id,firstname,lastname},token} = isAuthenticated()\n\n    const preload =()=>{\n        getallcategories()\n        .then(data=>{\n            if (data.error) {\n                console.log(data.error)\n            }\n            else{\n                setcategoty(data)\n            }\n        })\n    }\n\n    useEffect(() => {\n        preload()\n    }, [])\n\n    const deleteThis = categoryId =>{\n        deleteCategory(categoryId,_id,token).then(data=>{\n            if (data.error) {\n                console.log(data.error)\n            }\n            else{\n                preload()\n            }\n        })\n\n    }\n \n    const leftSide = () => {\n        return(\n            <div className=\"leftSide\">\n                <img src={logo}></img>\n                 <ul>\n                 <NavLink className=\"admin\" exact to=\"/admin/dashboard\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><img src={admin} /><p>{firstname}{lastname}</p></NavLink>\n                        <NavLink exact to=\"/admin/create/category\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Create Category</li></NavLink>\n                        <NavLink exact to=\"/admin/create/product\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Create Product</li></NavLink>\n                        <NavLink exact to=\"/admin/products\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Manage Product</li></NavLink>\n                        <NavLink exact to=\"/admin/categorys\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Manage Category</li></NavLink>\n                        <NavLink exact to=\"/\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}}  style={{ textDecoration: 'none' ,color :\"white\"}}><li>Manage Orders</li></NavLink>\n                </ul>\n            </div>\n        )\n    }\n\nconst rightSide = () => {\n        return(\n            <div className=\"rightSide\">\n                <div>\n                    <h2>Manage Category</h2>\n                </div>\n                <div className=\"main\">\n                    {category.map((cate,index)=>{\n                        return(\n                        <div className=\"card-category\">\n                        <span className=\"card-name\">{cate.name}</span>\n                        <span className=\"update-btn\"><Link style={{textDecoration:\"none\",color:\"white\"}} to={`/admin/category/update/${cate._id}`} >Update</Link></span>\n                        <span className=\"delete-btn\" onClick={()=>{deleteThis(cate._id)}} >Delete</span>\n                        </div>\n                        )\n                    \n                    })}\n                    \n                </div>\n            </div>\n        )\n    }\n\n\n    return(\n        <div className=\"admin_main\">\n            <Menu />\n            {leftSide()}\n            {rightSide()}\n        </div>\n    )\n}\n\nexport default ManageCategory","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/admin/UpdateCategory.js",["160","161","162","163"],"import React,{useState,useEffect} from \"react\"\nimport {NavLink} from \"react-router-dom\"\nimport logo from \"../logo1.png\"\nimport {isAuthenticated} from \"../auth/helper/index\"\nimport Menu from \"../core/Menu\"\nimport admin from \"../admin2.png\"\nimport {createCategory, getCategory, updateCategory} from \"../admin/helper/adminapicall\"\n\n\nconst UpdateCategory = ({match}) => {\n\n    const [values,setValues] = useState({\n        name:\"\",\n        error:false,\n        success:false\n    })\n\n    const {name,error,success} = values\n\n    const{user : {_id,firstname,lastname},token} = isAuthenticated()\n\n    const handlechange = name => event => {\n        setValues({...values,error : false,[name]:event.target.value})\n    } \n\n    const preload=(categoryId)=>{\n        getCategory(categoryId)\n        .then(data=>{\n            if (data.error) {\n                setValues({...values,error:data.error,})\n            }\n            else{\n                console.log(data)\n                setValues({\n                    ...values,\n                    name:data.name,\n                })\n            }\n        })\n    }\n\n    useEffect(() => {\n        console.log()\n        preload(match.params.categoryId)\n    }, [])\n\n    const successMessage =()=>{\n        return(\n            <div style={{display: success ? \"\" : \"none\"}} className=\"success-category\">\n                <h5>Category Updated Successfully</h5>\n            </div>\n        )\n    }\n\n    const errorMessage =()=>{\n        return(\n            <div style={{display: error ? \"\" : \"none\"}} className=\"error-category\">\n                <h5>{values.error}</h5>\n            </div>\n        )\n    }\n\n    const onSubmit = event =>  {\n        event.preventDefault();\n        setValues({...values,error:false,success:false})\n        updateCategory(match.params.categoryId,_id,token,{name})\n        .then(data=>{\n            if(data.err){\n                setValues({...values,error:data.err,success:false})\n            }\n            else{\n                setValues({\n                    ...values,\n                    success:true,\n                    name:\"\"\n                })\n\n            }\n        })\n    }\n\n    const leftSide = () => {\n        return(\n            <div className=\"leftSide\">\n                <img src={logo}></img>\n                 <ul>\n                 <NavLink className=\"admin\" exact to=\"/admin/dashboard\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><img src={admin} /><p>{firstname}{lastname}</p></NavLink>\n                        <NavLink exact to=\"/admin/create/category\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Create Category</li></NavLink>\n                        <NavLink exact to=\"/admin/create/product\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Create Product</li></NavLink>\n                        <NavLink exact to=\"/admin/products\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Manage Product</li></NavLink>\n                        <NavLink exact to=\"/admin/categorys\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Manage Category</li></NavLink>\n                        <NavLink exact to=\"/\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}}  style={{ textDecoration: 'none' ,color :\"white\"}}><li>Manage Orders</li></NavLink>\n                </ul>\n            </div>\n        )\n    }\n\nconst rightSide = () => {\n        return(\n            <div className=\"rightSide\">\n                <div>\n                    <h2>Update Category</h2>\n                </div>\n                    {successMessage()}\n                    {errorMessage()}\n                <div className=\"main_right\">\n                    <div className=\"center-category\">\n                        <form className=\"input-category\">\n                            <div className=\"category\">\n                                <label>Update Category Name</label>\n                                <br />\n                                <input value={name} onChange={handlechange(\"name\")} autoFocus required placeholder=\"eg.Summer\" type=\"text\" name=\"\" />\n                            </div>\n                            <br />\n                            <div>\n                                <button onClick={onSubmit} className=\"create-btn-category\" type=\"button\">Update</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n\n    return(\n        <div className=\"admin_main\">\n            <Menu />\n            {leftSide()}\n            {rightSide()}\n        </div>\n    )\n}\n\nexport default UpdateCategory","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/core/helper/carthelper.js",["164"],"export const addItemToCartHelper =  (item,next)=>{\n    let cart=[]\n    if(typeof window !== undefined){\n        if(localStorage.getItem(\"cart\")){\n            cart = JSON.parse(localStorage.getItem(\"cart\"))\n        }\n        cart.push({\n            ...item,\n        })\n        localStorage.setItem(\"cart\",JSON.stringify(cart))\n        next()\n    }\n}\n\n\nexport const loadCart=()=>{\n    if(typeof window !== undefined){\n        if(localStorage.getItem(\"cart\")){\n            return JSON.parse(localStorage.getItem(\"cart\"))\n        }\n    }\n}\n\n\nexport const removeItemFromCart = (productId) =>{\n    let cart=[]\n    if(typeof window !== undefined){\n        if(localStorage.getItem(\"cart\")){\n            cart = JSON.parse(localStorage.getItem(\"cart\"))\n        }\n        cart.map((item,i)=>{\n            if(item._id===productId){\n                cart.splice(i,1)\n            }\n        })\n        localStorage.setItem(\"cart\",JSON.stringify(cart))\n    }\n    return cart\n}\n\nexport const cartEmpty = next =>{\n    if(typeof window !== undefined){\n        localStorage.removeItem(\"cart\")\n        next()\n    }\n}","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/core/Cart.js",["165","166","167","168","169","170"],"import React,{useState,useEffect,forceUpdate} from \"react\";\nimport {Link,Redirect} from \"react-router-dom\"\nimport Logo from \"../logo1.png\"\nimport Menu from \"./Menu\"\nimport \"./Base_style.css\"\nimport ImageHelper from \"../admin/helper/imagehelper\";\nimport {addItemToCartHelper, loadCart, removeItemFromCart} from \"./helper/carthelper\"\nimport { isAuthenticated } from \"../auth/helper\";\n\n\nconst Cart = (\n    {\n        className = \"sanjay\",\n        addTocart = false,\n        removeFromCart=true,\n        children\n    }\n)=>{\n\n    const [products, setproducts] = useState([])\n    const [count, setcount] = useState(0)\n\n    const preload = ()=>{\n        setproducts(loadCart())\n    }\n\n    useEffect(() => {\n        preload()\n    }, [])\n    \n  \n\n    const additemTocart = (addTocart,product) =>{\n        return(\n            addTocart && (\n                <span className=\"addtocart-btn\"><Link style={{textDecoration:\"none\",color:\"white\"}}>Add To Cart</Link></span>\n            )\n        )\n    }\n\n    const removeitemFromcart = (removeFromCart,product) =>{\n        return(\n            removeFromCart && (\n                <span onClick={()=>{removeItemFromCart(product._id); preload();getFinalAmount();getCount()}} className=\"removefromcart-btn\"><Link style={{textDecoration:\"none\",color:\"white\"}}>Remove Item</Link></span>\n            )\n        )\n    }\n\n    const getFinalAmount = ()=>{\n        let amount = 0\n        products.map(p=>{\n            amount = amount + p.price\n        })\n        return amount\n\n    }\n    const getCount = ()=>{\n        return products.length\n    }\n\n\n\n    return(\n        <div className=\"main-body\">\n            <div className=\"header\">\n                <span>\n                    <img className=\"logo_image\" src={Logo} alt=\"logo\"/>\n                </span>\n                \n                <Menu />\n            </div>\n            <h1 className=\"title_cart\">Cart</h1>\n            <div className=\"product-home-main\">\n                \n                <div  className=\"product-home-main-2\">\n                        {products.map((product,index)=>{\n                            return(\n                            <div data-aos=\"zoom-in\" key={index} className=\"card\">\n                            <ImageHelper product={product}/>\n                            <span className=\"card-name\">{product.name}</span>\n                            <span className=\"card-price\">Rs.{product.price}</span>\n                            {additemTocart(addTocart,product)}\n                            {removeitemFromcart(removeFromCart,product)}\n                            </div>\n                            )\n                        \n                        })}\n                </div>\n                <div className=\"cart-checkout\">\n                    <div>\n                        <h1 style={{color:\"white\"}}>Subtotal ({getCount()}): ₹ {getFinalAmount()}</h1>\n                        {isAuthenticated() ? (\n                            <button>Buy Now</button>\n                        ) : (\n                            <Link to=\"/signin\">\n                                <button>Signin</button>\n                            </Link>\n                        )}\n                    </div>\n                </div>\n            </div>\n            <footer class=\"footer-distributed\">\n \n\t\t<div class=\"footer-left\">\n \n\t\t        <h3>E<span>Shop</span></h3>\n \n\t\t        <p class=\"footer-company-name\">Design By Sanjay Suthar</p>\n\t\t</div>\n \n\t\t<div class=\"footer-center\">\n \n                        <div>\n                                <p><span>Parul University</span> Vadodara, India</p>\n                        </div>\n \n                        <div>\n                                <p><a href=\"mailto:support@company.com\">sanjaysuthar786786@gmail.com</a></p>\n                        </div>\n\n\t\t</div>\n \n\t\t<div class=\"footer-right\">\n \n\t\t<p class=\"footer-company-about\">\n\t\t<span>About this Platform</span>\n                This is E-Commerce Website with admin control and payment method.\n\t\t</p>\n \n\t\t<div class=\"footer-icons\">\n \n\t\t</div>\n \n\t\t</div>\n \n\t\t</footer>\n        </div>\n    )\n}\n\n\nexport default Cart\n","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/user/Profile.js",["171","172","173","174"],"import React, { useState,useEffect } from \"react\"\nimport {NavLink} from \"react-router-dom\"\nimport \"./AdminDashboard.css\"\nimport logo from \"../logo1.png\"\nimport {isAuthenticated, signout} from \"../auth/helper/index\"\nimport Menu from \"../core/Menu\"\nimport admin from \"../admin2.png\"\nimport { GetUser, UpdateUser } from \"./helper/userapicall\"\n\nconst Profile = ({history}) => {\n\n    const [values, setvalues] = useState({\n        firstname : \"\",\n        lastname : \"\",\n        email : \"\",\n        password : \"\",\n        error : \"\",\n        success : false\n    })\n    const {firstname,lastname,email,password,error,success} = values\n    const{token,user} = isAuthenticated()\n    const preload = () =>{\n        setvalues({\n            ...values,\n            firstname:user.firstname,\n            lastname : user.lastname,\n            email : user.email\n        })\n    }\n\n    useEffect(() => {\n        preload()\n    }, [])\n   \n    const onSubmit=(event)=>{\n        event.preventDefault()\n        UpdateUser({firstname,lastname,email,password},user._id,token)\n        .then(data=>{\n            console.log(data)\n            if(data.error){\n                setvalues({...values,error:data.error})\n            }\n            else{\n                setvalues({\n                    ...values,\n                    firstname:\"\",\n                    lastname:\"\",\n                    email:\"\",\n                    password:\"\",\n                    success:true,\n                    error:\"\"\n                    \n                })\n                setTimeout(()=>{\n                    signout(() => {\n                        history.push(\"/\")\n                    })\n                },2000)\n            }\n        })\n        .catch(err=>console.log(err))\n    }\n\n    const successMessage =()=>{\n        return(\n            <div style={{display: success ? \"\" : \"none\"}} className=\"success-product\">\n                <h5>Updated Successfully</h5>\n            </div>\n        )\n    }\n\n    const errorMessage =()=>{\n        return(\n            <div style={{display: error ? \"\" : \"none\"}} className=\"error-product\">\n                <h5>{error}</h5>\n            </div>\n        )\n    }\n\n    const handlechange = name => event =>{\n        setvalues({...values,error : \"\", [name] : event.target.value})\n    }\n\n    const leftSide = () => {\n        return(\n            <div className=\"leftSide\">\n                <img src={logo}></img>\n                 <ul>\n                    <NavLink className=\"admin\" exact to=\"/user/dashboard\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><img src={admin} /><p>{user.firstname}{user.lastname}</p></NavLink>\n                    <NavLink exact to=\"/profile\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Profile</li></NavLink>\n                </ul>\n            </div>\n        )\n    }\n\nconst rightSide = () => {\n        return(\n            <div className=\"rightSide\">\n                <div>\n                    <h2>UPDATE PROFILE!</h2>\n                </div>\n                {successMessage()}\n                {errorMessage()}\n                <div className=\"div-update-profile\">\n                    <form className=\"input-profile\">\n                        <div className=\"fullname-profile\">\n                            <label className=\"label-first-profile\" >First Name </label>\n                            <br />\n                            <input value={firstname} onChange={handlechange(\"firstname\")} type=\"text\" name=\"\"  />\n                        </div>\n                        <br/>\n                        <div>\n                            <label className=\"label-last-profile\">Last Name </label>\n                            <br />\n                            <input value={lastname} onChange={handlechange(\"lastname\")}   className=\"input-last-profile\" type=\"text\" name=\"\" />\n                        </div>\n                        <br />\n                        <div className=\"email-profile\">\n                            <label>Email</label>\n                            <br />\n                            <input value={email} onChange={handlechange(\"email\")}   type=\"text\" name=\"\" />\n                        </div>\n                        <br />\n                        <div className=\"pass-profile\">\n                            <label>New Password</label>\n                            <br />\n                            <input onChange={handlechange(\"password\")}  type=\"password\"/>\n                        </div>\n                        <br />\n                        <div>\n                        <button  onClick={onSubmit} className=\"create-btn-profile\" type=\"button\">Update</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n\n\n    return(\n        <div className=\"admin_main\">\n            <Menu />\n            {leftSide()}\n            {rightSide()}\n        </div>\n    )\n}\n\nexport default Profile","/Users/sanjay/Desktop/Project/fullmern/projfrontend/src/user/helper/userapicall.js",[],["175","176"],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":1,"column":15,"nodeType":"183","messageId":"184","endLine":1,"endColumn":23},{"ruleId":"181","severity":1,"message":"185","line":2,"column":29,"nodeType":"183","messageId":"184","endLine":2,"endColumn":39},{"ruleId":"181","severity":1,"message":"186","line":8,"column":8,"nodeType":"183","messageId":"184","endLine":8,"endColumn":12},{"ruleId":"181","severity":1,"message":"187","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":11},{"ruleId":"181","severity":1,"message":"188","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":12},{"ruleId":"181","severity":1,"message":"189","line":9,"column":8,"nodeType":"183","messageId":"184","endLine":9,"endColumn":14},{"ruleId":"181","severity":1,"message":"190","line":26,"column":19,"nodeType":"183","messageId":"184","endLine":26,"endColumn":27},{"ruleId":"181","severity":1,"message":"191","line":12,"column":48,"nodeType":"183","messageId":"184","endLine":12,"endColumn":52},{"ruleId":"192","severity":1,"message":"193","line":17,"column":17,"nodeType":"194","endLine":17,"endColumn":33},{"ruleId":"192","severity":1,"message":"193","line":19,"column":183,"nodeType":"194","endLine":19,"endColumn":202},{"ruleId":"181","severity":1,"message":"191","line":12,"column":48,"nodeType":"183","messageId":"184","endLine":12,"endColumn":52},{"ruleId":"192","severity":1,"message":"193","line":17,"column":17,"nodeType":"194","endLine":17,"endColumn":33},{"ruleId":"192","severity":1,"message":"193","line":19,"column":181,"nodeType":"194","endLine":19,"endColumn":200},{"ruleId":"192","severity":1,"message":"193","line":65,"column":17,"nodeType":"194","endLine":65,"endColumn":33},{"ruleId":"192","severity":1,"message":"193","line":67,"column":181,"nodeType":"194","endLine":67,"endColumn":200},{"ruleId":"181","severity":1,"message":"195","line":30,"column":35,"nodeType":"183","messageId":"184","endLine":30,"endColumn":40},{"ruleId":"181","severity":1,"message":"196","line":30,"column":41,"nodeType":"183","messageId":"184","endLine":30,"endColumn":49},{"ruleId":"181","severity":1,"message":"197","line":30,"column":67,"nodeType":"183","messageId":"184","endLine":30,"endColumn":74},{"ruleId":"181","severity":1,"message":"198","line":30,"column":81,"nodeType":"183","messageId":"184","endLine":30,"endColumn":92},{"ruleId":"199","severity":1,"message":"200","line":83,"column":8,"nodeType":"201","endLine":83,"endColumn":10,"suggestions":"202"},{"ruleId":"192","severity":1,"message":"193","line":104,"column":17,"nodeType":"194","endLine":104,"endColumn":33},{"ruleId":"192","severity":1,"message":"193","line":106,"column":188,"nodeType":"194","endLine":106,"endColumn":207},{"ruleId":"181","severity":1,"message":"203","line":7,"column":9,"nodeType":"183","messageId":"184","endLine":7,"endColumn":23},{"ruleId":"181","severity":1,"message":"204","line":8,"column":8,"nodeType":"183","messageId":"184","endLine":8,"endColumn":13},{"ruleId":"181","severity":1,"message":"205","line":9,"column":8,"nodeType":"183","messageId":"184","endLine":9,"endColumn":21},{"ruleId":"192","severity":1,"message":"193","line":49,"column":17,"nodeType":"194","endLine":49,"endColumn":33},{"ruleId":"192","severity":1,"message":"193","line":51,"column":181,"nodeType":"194","endLine":51,"endColumn":200},{"ruleId":"181","severity":1,"message":"195","line":30,"column":35,"nodeType":"183","messageId":"184","endLine":30,"endColumn":40},{"ruleId":"181","severity":1,"message":"196","line":30,"column":41,"nodeType":"183","messageId":"184","endLine":30,"endColumn":49},{"ruleId":"181","severity":1,"message":"197","line":30,"column":67,"nodeType":"183","messageId":"184","endLine":30,"endColumn":74},{"ruleId":"181","severity":1,"message":"198","line":30,"column":81,"nodeType":"183","messageId":"184","endLine":30,"endColumn":92},{"ruleId":"199","severity":1,"message":"206","line":101,"column":8,"nodeType":"201","endLine":101,"endColumn":10,"suggestions":"207"},{"ruleId":"192","severity":1,"message":"193","line":122,"column":17,"nodeType":"194","endLine":122,"endColumn":33},{"ruleId":"192","severity":1,"message":"193","line":124,"column":188,"nodeType":"194","endLine":124,"endColumn":207},{"ruleId":"192","severity":1,"message":"193","line":11,"column":13,"nodeType":"194","endLine":11,"endColumn":35},{"ruleId":"181","severity":1,"message":"204","line":8,"column":8,"nodeType":"183","messageId":"184","endLine":8,"endColumn":13},{"ruleId":"192","severity":1,"message":"193","line":47,"column":17,"nodeType":"194","endLine":47,"endColumn":33},{"ruleId":"192","severity":1,"message":"193","line":49,"column":181,"nodeType":"194","endLine":49,"endColumn":200},{"ruleId":"181","severity":1,"message":"203","line":7,"column":9,"nodeType":"183","messageId":"184","endLine":7,"endColumn":23},{"ruleId":"199","severity":1,"message":"208","line":45,"column":8,"nodeType":"201","endLine":45,"endColumn":10,"suggestions":"209"},{"ruleId":"192","severity":1,"message":"193","line":85,"column":17,"nodeType":"194","endLine":85,"endColumn":33},{"ruleId":"192","severity":1,"message":"193","line":87,"column":181,"nodeType":"194","endLine":87,"endColumn":200},{"ruleId":"210","severity":1,"message":"211","line":31,"column":26,"nodeType":"212","messageId":"213","endLine":31,"endColumn":28},{"ruleId":"181","severity":1,"message":"214","line":1,"column":34,"nodeType":"183","messageId":"184","endLine":1,"endColumn":45},{"ruleId":"181","severity":1,"message":"215","line":2,"column":14,"nodeType":"183","messageId":"184","endLine":2,"endColumn":22},{"ruleId":"181","severity":1,"message":"216","line":7,"column":9,"nodeType":"183","messageId":"184","endLine":7,"endColumn":28},{"ruleId":"181","severity":1,"message":"217","line":21,"column":12,"nodeType":"183","messageId":"184","endLine":21,"endColumn":17},{"ruleId":"181","severity":1,"message":"190","line":21,"column":19,"nodeType":"183","messageId":"184","endLine":21,"endColumn":27},{"ruleId":"210","severity":1,"message":"211","line":51,"column":23,"nodeType":"212","messageId":"213","endLine":51,"endColumn":25},{"ruleId":"181","severity":1,"message":"218","line":8,"column":10,"nodeType":"183","messageId":"184","endLine":8,"endColumn":17},{"ruleId":"199","severity":1,"message":"200","line":33,"column":8,"nodeType":"201","endLine":33,"endColumn":10,"suggestions":"219"},{"ruleId":"192","severity":1,"message":"193","line":87,"column":17,"nodeType":"194","endLine":87,"endColumn":33},{"ruleId":"192","severity":1,"message":"193","line":89,"column":183,"nodeType":"194","endLine":89,"endColumn":202},{"ruleId":"177","replacedBy":"220"},{"ruleId":"179","replacedBy":"221"},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"no-unused-vars","'Profiler' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'Base' is defined but never used.","'API' is defined but never used.","'Flag' is defined but never used.","'Signin' is defined but never used.","'setcount' is assigned a value but never used.","'role' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'photo' is assigned a value but never used.","'category' is assigned a value but never used.","'loading' is assigned a value but never used.","'didredirect' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preload'. Either include it or remove the dependency array.","ArrayExpression",["224"],"'createCategory' is defined but never used.","'photo' is defined but never used.","'UpdateProduct' is defined but never used.","React Hook useEffect has missing dependencies: 'match.params.productId' and 'preload'. Either include them or remove the dependency array.",["225"],"React Hook useEffect has missing dependencies: 'match.params.categoryId' and 'preload'. Either include them or remove the dependency array.",["226"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'forceUpdate' is defined but never used.","'Redirect' is defined but never used.","'addItemToCartHelper' is defined but never used.","'count' is assigned a value but never used.","'GetUser' is defined but never used.",["227"],["222"],["223"],"no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"228","fix":"234"},"Update the dependencies array to be: [preload]",{"range":"235","text":"236"},"Update the dependencies array to be: [match.params.productId, preload]",{"range":"237","text":"238"},"Update the dependencies array to be: [match.params.categoryId, preload]",{"range":"239","text":"240"},{"range":"241","text":"236"},[2283,2285],"[preload]",[2857,2859],"[match.params.productId, preload]",[1192,1194],"[match.params.categoryId, preload]",[912,914]]